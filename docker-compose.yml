volumes:
  mongodb_data:
    external: false

networks:
  cocoannotator:
    external: false

services:
  messageq:
    extends:
      file: docker-compose-helpers.yml
      service: service-common
    image: rabbitmq:3
    container_name: annotator_message_q
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
  database:
    extends:
      file: docker-compose-helpers.yml
      service: service-common
    image: mongo:4.0
    container_name: annotator_mongodb
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - "mongodb_data:/data/db"
    command: "mongod --smallfiles --logpath=/dev/null"
    ports:
      - 27017:27017
  frontend:
    extends:
      file: docker-compose-helpers.yml
      service: service-common
    container_name: annotator_client
    build:
      context: .
      dockerfile: ./client/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - "./client:/workspace/client"
    depends_on:
      - webserver
  webserver:
    extends:
      file: docker-compose-helpers.yml
      service: service-common
    build:
      context: .
      dockerfile: ./Dockerfile
    image: annotator_webclient
    container_name: annotator_webclient
    restart: always
    ports:
      - "5001:5000"
    environment:
      - SECRET_KEY=RandomSecretKeyHere
      - FILE_WATCHER=true
      - NAME=Test Annotator
    depends_on:
      - database
      - workers
  workers:
    extends:
      file: docker-compose-helpers.yml
      service: service-common
    container_name: annotator_workers
    image: annotator_workers
    build:
      context: .
      dockerfile: ./backend/workers/Dockerfile
    depends_on:
      - messageq
      - database

  ia:
    profiles:
      - ia-gpu
    extends:
      file: ./docker-compose-helpers.yml
      service: ia-gpu

  ia-cpu:
    profiles:
      - ia-cpu
    extends:
      file: ./docker-compose-helpers.yml
      service: ia-cpu

